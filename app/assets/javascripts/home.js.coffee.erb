# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/

$(document).ready () ->
	connection = null

	# accept the incoming connection and start two-way audio
	call = ->
	  Twilio.Device.setup("#{$('#call').data('token')}", {debug: true})
	  connection = Twilio.Device.connect()
	  
	hangup = ->
	  connection.disconnect()

	$("#call").click (e) ->
	  e.preventDefault()
	  call()

	$("#hangup").click (e) ->
	  e.preventDefault()
	  hangup()


	# Pusher events
	pusher = new Pusher("#{$('#call').data('pusherkey')}") # Replace with your app key
	channel = pusher.subscribe("dashboard-events")

	channel.bind "new-voicemail", (data) ->
	  console.log "An event was triggered with message: " + data.message
	  audioHtml = "<li><audio controls='controls'>  <source src='#{data.message.voice_message_url}'  /></audio></li>"
	  $('#voicemail-list').append(audioHtml)

	channel.bind "new-sms", (data) ->
	  console.log "An event was triggered with message: " + data.message
	  smsHtml = "<li><i class='icon-comments'></i><a href='/twiml/modal_sms?id=#{data.message.id}' data-backdrop='true' data-keyboard='true' data-remote='true' data-target='#modal-window' data-toggle='modal'>Respond</a><span class='avatar img-large'><i class='icon-comments-alt'></i></span><strong>From:</strong>#{data.message.from_num}<br><strong>Message:</strong>#{data.message.body}<br><br></li>"
	  $('#sms-list').append(smsHtml)	  	  